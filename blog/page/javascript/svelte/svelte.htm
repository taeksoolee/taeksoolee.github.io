## svelte
  : The magical disappearing UI framework
  : Cybernetically enhanced web apps


  * '프레임워크가 없는 프레임워크' 혹은 '컴파일러'
  ( Virtual(가상) DOM이 없고, Runtime(런타임)에 로드할 프레임워크가 없음을 의미 )

  * 빌드 단계에서 구성 요소를 컴파일하는 도구이므로 페이지에 단일 번들(bundle.js)을 로드하여 앱을 렌더링

  * 반응성(변경된 값이 DOM에 자동으로 반응) : Svelte는 별도의 Setter 없이 값의 할당(assignments)만으로 업데이트를 트리거(Trigger)

  # svelte REPL
    * CDN 미제공 / not a runtime framework
    * https://svelte.dev/repl/hello-world?version=3.30.1

## Svelte/template
  # digit을 이용한 프로젝트 생성 (rollup 번들러 사용)
<code>
$ npx degit sveltejs/template [프로젝트명]
$ cd [프로젝트명]
$ npm install
$ npm run dev
</code>

  # rollup / sirv-cli 다운로드
<code>
$ npm install --global roolup
$ npm install --global sirv-cli
</code>

  # 프로젝트 구조
    * /public/build에는 Svelte가 수행한 컴파일 결과가 들어갑니다.
    * /src는 모든 사용자 정의 Svelte 코드를 저장합니다.
    * rollup.config.js은 Rollup이라는 Webpack에 대응하는 자바스크립트용 모듈 번들러의 설정 파일입니다. 각 번들러의 차이점을 이해하고 싶다면 Comparing bundlers: Webpack, Rollup & Parcel를 확인해 보세요.
    * sirv-cli 모듈은 sirv public을 이용해 SPA 서버를 실행합니다.

  # template 사용
<code><samp>
// App.svelte
<script>
  let title = 'hello svelte!';
  let a = 1, b = 2;
</script>

<main>
  <h1>{title}</h1>
  <p>{a} + {b} = {a+b}</p>
</main>

=> hello svelte!
=> 1 + 2 = 3
</samp></code>

  # event 사용
    > preventDefault	기본 동작 방지
    > stopPropagation	이벤트 버블링 방지
    > passive	이벤트 처리를 완료하지 않고도 기본 속도로 화면을 스크롤
    > nonpassive	명시적인 passive: false(보통 필요하지 않음)
    > capture	캡쳐링에서 핸들러 실행
    > once	최초 실행 후 핸들러 삭제
    > self	이벤트의 target과 currentTarget이 일치하는 경우 핸들러 실행
<code><samp>
<script>
  let answer = 'hello world'
  let count = 0;
  function setAnswer(event) {
    
    if(count%2 === 0) {
      answer = 'oh exellent!!';
    } else {
      answer = 'oh very very exellent!!';
    }
    count++;
  }
</script>

<main>
  <div>
    {answer}
    <button on:click={setAnswer}>answer?</button>
  </div>
  <!-- 수식어 사용 예제 -->
  <button on:click|once={executeOnce}>once!</button>
</main>
</samp></code>

  # 컴포넌트 작성
<code><samp>
// MyComponent.svelte
<script>
  export let title = 'default value!'
  let name = 'taeksoolee';
  let age = 29;
  let email = 'leets1490@gamil.com';
</script>

<h2>{title}</h2>
<div>{name}, {age}, {email}</div>

// App.svelte
작성중...
</samp></code>

<hr />
참고 : https://heropy.blog/2019/09/29/svelte/