## window, location 객체

## event
  # 버블링 (bublling)

  # 캡쳐링 (capturing)

  # 마우스 이벤트 트리거 (MDN 참고)
  - click
  - mouseover
  - mouseout
  - mousemove
  - mousedown
  - mouseup
  
  - drag      ondrag	    요소나 텍스트 블록을 드래그 할 때 발생한다.
  - dragend   ondragend	  드래그를 끝냈을 때 발생한다. (마우스 버튼을 떼거나 ESC 키를 누를 때)
  - dragenter	ondragenter	드래그한 요소나 텍스트 블록을 적합한 드롭 대상위에 올라갔을 때 발생한다.
  - dragexit	ondragexit	요소가 더 이상 드래그의 직접적인 대상이 아닐 때 발생한다.
  - dragleave	ondragleave	드래그하는 요소나 텍스트 블록이 적합한 드롭 대상에서 벗어났을 때 발생한다.
  - dragover	ondragover	요소나 텍스트 블록을 적합한 드롭 대상 위로 지나갈 때 발생한다. (매 수백 밀리초마다 발생한다.)
  - dragstart	ondragstart	사용자가 요소나 텍스트 블록을 드래그하기 시작했을 때 발생한다.
  - drop	    ondrop      요소나 텍스트 블록을 적합한 드롭 대상에 드롭했을 때 발생한다.


  # event 객체 필드
  altkey, ctrlkey, shiftkey : 클릭시 눌려있는 키 여부 (boolean)

  clientX, clientY
  offsetX, offsetY
  pageX, pageY
  layerX, layerY
  screenX, screenY
  x, y

## scrollEvent
  * blog script에 애니메이션 코드 있음
  * 관련 ilb
    > css
      - scroll-indicator: https://css-tricks.com/books/greatest-css-tricks/scroll-indicator/
      - Animate.css : 
    > js : https://wowjs.uk/

  # scrollTo
<code>
  domElement.scrollTo(0, 10); // 10px 만큼 스크롤
</code>

## fullscreen API
  # 풀스크린 설정 (DOM 객체에서 호출)
<code>
document.documentElement 
.requestFullscreen
.webkitRequestFullscreen
.mozRequestFullScreen
.msRequestFullscreen
</code>
  # 풀스크린 해제 (Document 객체에서 호출)
<code>
document
.exitFullscreen
.webkitExitFullscreen
.mozCancelFullScreen
.msExitFullscreen
</code>

  # 사용 예제
<code>
var docV = document.documentElement;
function openFullScreenMode() {
  if (docV.requestFullscreen)
      docV.requestFullscreen();
  else if (docV.webkitRequestFullscreen)
      docV.webkitRequestFullscreen();
  else if (docV.mozRequestFullScreen)
      docV.mozRequestFullScreen();
  else if (docV.msRequestFullscreen)
      docV.msRequestFullscreen();
}

function closeFullScreenMode() {
    if (docV.exitFullscreen)
        .exitFullscreen();
    else if (docV.webkitExitFullscreen)
        .webkitExitFullscreen();
    else if (docV.mozCancelFullScreen)
        .mozCancelFullScreen();
    else if (docV.msExitFullscreen)
        .msExitFullscreen();
}
</code>

## css root 속성 컨트롤 예
<code>
// .css
:root {
  --my-style: 1rem;
}

// .js
document.documentElement.style.setProperty('--my-style', 'value');
document.documentElement.style.getProperty('--my-style');
</code>


## width DOM - API
  # element.offsetWidth / Height (가장 많이 사용)
    * margin을 제외한, padding값, border값까지 계산한 값

  # element.clientWidth / Height
    * margin값과 border값이 제외된, padding값까지만 적용된 내부의 실제 크기
      (scroll bar의 크기 제외)

  # element.scrollWidth / Height
    * 스크롤 영역일때 스크롤로 감싸여진 내용의 전체 크기

  # element.getBoundingClientRect()
    * width, height, top, right, bottom, left ,x ,y 의 객체 갑을 가져옴
    * width, height는 offset 값과 같음

## engine
  # -webkit- : 웹킷 방식(엔진)의 브라우저
    * 크롬, 사파리, 안드로이드 브라우저 등
  # -moz- : 게코 방식(엔진)의 브라우저
    * 모질라 파이어폭스 등 (리눅스에서 많이 사용됨)
  # -o- : 오페라 방식(엔진)의 브라우저
    * 오페라
  # -ms- : 트라이던트 방식의 브라우저
    * IE, 엣지 등