
## Selector(선택자) : Element(tag - 박스모델)를 선택하기 위한 표현형식
  # * : 모든 선택자를 선택
  # tag(Element) : 태그명을 이용하여 엘리먼트를 선택
  # id(고유값)	
      >> #id형식을 통해 접근가능
      >> 유일한 엘리먼트에 설정된 id 속성값을 이용하여 엘리먼트 선택
      >> javascript에서 많이 사용
      >> css에서는 레이아웃 변경할때 많이 사용함.

  # class(다수값)	: .class 형식을 통해 접근가능 
      >> 공백을 이용하여 여러개 작성 가능 ex. class="class1 class2"
      >> 다수의 엘리먼트에 설정된 class 속성값을 이용하여 엘리먼트 선택
      >> css에서 많이사용함.
  # 후손선택자 : 최상위 엘리먼트에 존재하는 모든 하위 엘리먼트 선택
    >> '부모선택자 후손선택자'

  # 자식선택자 : 상위 엘리먼트에 존재하는 모든 하위 엘리먼트 선택
    >> [부모선택자]>[후손선택자]

  # 필터선택자 : 다수의 선택 엘리먼트 중 원하는 엘리먼트만을 선택
    >> [부모선택자] [후손선택자].class

  # 형제선택자 : 상위 엘리먼트가 같은 동일 깊이의 엘리먼트 선택
    >> [선택자]~[선택자]'

  # 인접형제선택자 : 가장 가까운  동일 깊이의 엘리먼트 선택
    >> [선택자]+[선택자]
  
## attribute selector : 엘리먼트의 속성과 속성값으로 엘리먼트 선택
      >> 선택자[속성] : 선택한 속성이 있는 엘리먼트를 선택
      >> 선택자[속성=속성값] : 선택한 속성에 속성값이 같은 엘리먼트 선택
      >> 선택자[속성~=속성단어] : 속성의 속성단어(공백으로 구분)가 포함된 엘리먼트 선택
      >> 선택자[속성*=속성단어] : 속성의 속성단어(공백으로 구분하지않음)가 포함된 엘리먼트 선택 
      >> 선택자[속성^=속성단어] : 속성의 속성단어로 시작하는 엘리먼트 선택 (정규식)
      >> 선택자[속성$=속성단어] : 속성의 속성단어로 시작하는 엘리먼트 선택 (정규식)
  
## 가상선택자 : 선택 엘리먼트의 상태에 따른 스타일 적용
      >> 조상선택자 선택자:paduo-class (hover, link, visited, active...)
    
    :hover : 엘리먼트에 마우스 올린 상태
    :first-child : 선택된 다수의 엘리먼트중 첫번째 엘리먼트 
    :last-child : 선택된 다수의 엘리먼트중 마지막 엘리먼트
    :nth-child(n) : 선택된 다수의 엘리먼트중 인덱스값을 넣어 엘리먼트를 선택(1~...)
      * 2n-1(odd) 홀수, 2n(even) 짝수, 3n 3의배수 ..
    :nth-last-child(n) : 선택된 다수의 엘리먼트중 뒤에서 인덱스 값을 넣어 선택
      * 2n-1(odd) 홀수, 2n(even) 짝수, 3n 3의 배수...
    :only-child : 선택된 엘리먼트가 한개인경우
    :link : 하이퍼링크에서 URL을 한번도 요청하지 않은상태 (a tag)
    :visit : 하이퍼링크에서 URL을 한번이상 요청한상태 (a tag)
    :active : 선택 엘리먼트를 마우스 커서로 누른상태 (a tag)
    :not([속성="속성값"]) : 속성선택값이 아닐경우 (form tag)
    :disabled : 선택엘리먼트가 비활성 상태인경우 (form tag)
    :checked : radio 또는 checkbox 태그에서 체크된경우 (form tag)
    :selected	: select option 태그에서 선택된경우 (form tag)
    :focus : 엘리먼트에서 입력촛점이 위치된 경우 (form tag)