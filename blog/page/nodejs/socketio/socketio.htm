## ws : 간단한 websocket 구현을 도와주는 모듈
  # 설치
<code>
$ npm install --save ws
</code>
  # /src/webSocket.js 작성
<code> 
const wsModule = require('ws');

module.exports = function (_server) {
  const wss = new wsModule.Server({ server: _server });

  wss.on("connection", (ws, req) => {
    let ip = req.headers["x-forwared-for"] || req.connection.remoteAddress;

    console.log("요청 IP : " + ip);

    ws.on("message", (msg) => {
      console.log(`${ip}로 부터 받은 메시지 : ` + msg);

      ws.send("echo : " + msg);
    });
    ws.on("err", (err) => {
      console.log(`${ip} 연결 중 오류 발생` + err);
    });

    ws.on("close", () => {
      console.log(`${ip}와 연결 종료`);
    });
  });
};
</code>
  # /src/server.js 작성
<code>
const webSocket = require("./webSocket");

const http = require("http");
const server = http.createServer();

const ws = require("./webSocket");
ws(server);

server.listen(3000);
</code>
  # 테스트 사이트 : https://www.websocket.org/echo.html
    * 위 예제의 경우 ws://localhost:3000 으로 접속 가능


## socketio (with express)
  # 설치
<code>
$ npm install --save express socket.io
</code>
  # server.js 작성
<code>
const port = process.env.PORT || 3000;

const express = require("express");
const app = express();

const http = require("http").createServer(app);

const io = require("socket.io")(http);

app.use(express.static("public"));

app.get("/", (req, res) => {
  res.sendFile(__dirname + "/index.html");
});

io.on("connection", (socket) => {
  console.log("a user connected");

  socket.on("chat message", (msg) => {
    io.emit("chat message", msg);
  });

  socket.on("disconnect", () => {
    console.log("user disconnected");
  });
});

http.listen(port, () => {
  console.log("connected at ${port}");
});
</code>

  # index.html 클라이언트 작성
<code><samp>
<!-- ui -->
<ul id="messages"></ul>

<form action="" name="sendForm">
  <input name="message" autocomplete="off" />
  <button type="submit">send</button>
</form>

<!--/node_moudles/socket.io/client-dist/socket.io.js-->
<script src="/socket.io.js"></script>
<!-- script -->
<script>
  const socket = io();
  
  sendForm.onsubmit = function(e) {
    socket.emit('chat message', this.message.value);
    this.message.vlaue = '';
    return false;
  }
  
  socket.on('chat message', (msg) => {
    const li = document.createElement('li');
    li.innerText = msg;
    document.getElementById('messages').appendChild(li);
  });
</script>
</samp></code>

## socketio의 Namespace / room
  * Namespace => Room => Socket
  * Namespace : 통신 할수 있는 범위
  * Room : Namespace의 하위 범위

  # Namespace 사용
<code>
// server
const nsp = io.of('/my-namespace');

nsp.on('connection', function(socket) {
  console.log('someone connected');
});

nsp.emit('hi', 'everyone!');

// client
const scoket = io('my-namespace');
</code>
