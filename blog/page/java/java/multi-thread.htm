● 다중 스레드 프로그램 작성
  - 스레드(Thread) : 프로세스에서 명령을 실행하는 작업의 단위 >> 프로그램 흐름  
  - 단일 스레드 프로그램 
    >> JVM에 의해 생성된 스레드를 이용하여 main() 메소드의 명령 실행
    >> main() 메소드가 종료되면 자동으로 스레드 소멸 - 프로그램 종료
  - 다중 스레드 프로그램 
    >> 개발자가 직접 스레드를 생성하여 명령을 실행
    >> 프로그램의 모든 스레드가 소멸되면 프로그램 종료
    >> GUI 어플리케이션, 웹 어플리케이션등은 다중 스레드 프로그램으로 작성
  - 다중스레드 프로그램 작성 방법 >> 개발자가 스레드를 생성하여 명령 실행
    1) Thread 클래스를 상속 받아 다중스레드 프로그램을 작성하는 방법 
      ㄱ) Thread 클래스를 상속 받는 자식클래스 작성
      ㄴ) 자식클래스에서 run() 메소드를 오버라이드 선언 
          >> 개발자가 생성한 스레드로 실행될 명령을 작성하는 메소드
      ㄷ) 자식클래스를 이용하여 인스턴스 생성 - 스레드 인스턴스 자동 생성
          >> 자식클래스로 인스턴스를 생성할 경우 부모클래스의 인스턴스(Thread 인스턴스)가 먼저 생성          
      ㄹ) 스레드 인스턴스로 start() 메소드 호출
          >> 스레드 인스턴스로 스레드를 생성하여 run() 메소드의 명령 실행
      ※ 스레드 인스턴스로 하나의 스레드만 생성 가능  
    2) Runnable 인터페이스를 상속 받아 다중스레드 프로그램을 작성하는 방법
      >> Thread 클래스를 상속 받지 못할 경우 사용 - 단일상속의 문제점
      ㄱ) Runnable 인터페이스를 상속 받는 자식클래스 작성
      ㄴ) 자식클래스에서 run() 메소드를 오버라이드 선언
      ㄷ) Thread 클래스를 이용하여 Thread 인스턴스를 생성 - 스레드 인스턴스 직접 생성
        >> Runnable 인터페이스를 상속 받는 자식클래스의 인스턴스를 전달받는 생성자 이용
      ㄹ) 스레드 인스턴스로 start() 메소드 호출 
  - Thread 클래스의 메소드  
    start() : 스레드를 생성하여 run() 메소드에 작성된 명령을 실행하는 메소드
    stop() : 스레드를 강제로 소멸시키는 메소드 >> Deprecated
    suspend() : 스레드를 일시 중지 시키는 메소드 >> Deprecated - java.lang.Object 클래스의 wait() 메소드  
    resume() : suspend() 메소드로 중지된 스레드를 실행하는 메소드 >> Deprecated - java.lang.Object 클래스의 notify() 메소드
    sleep() : 원하는 시간(ms) 동안 스레드를 일시 중지
  - 스레드 우선순위(PRIORITY) 변경 : 우선순위 기본값 >> 5(Thread.NORM_PRIORITY)  
    >> Thread.setPriority(int newPriority) 메소드 호출
    >> newPriority : 1(Thread.MIN_PRIORITY) ~ 10(Thread.MAX_PRIORITY)
  
  - 다중 스레드 프로그램의 문제점
    >> 동일한 run() 메소드의 명령을 실행하는 다수의 스레드에서 인스턴스 
       필드값(공유값) 변경 관련 동일 메소드 호출시 잘못된 결과 제공
       
  - 다중 스레드 프로그램의 문제점 해결방법
    >> 스레드 동기화 : 스레드의 메소드 호출에 대한 스레드 일시 중지 기능
    >> 다수의 스레드가 인스턴스 필드값 변경 관련 동일 메소드를 호출할 경우
       먼저 호출 요청한 스레드에 대한 처리 결과가 제공될 때까지 다른 스레드의
       메소드 호출에 대한 명령 처리를 일시 중지(Method Lock) 
       
  - 스레드 동기화 방법
    1) 인스턴스 필드값 변경 메소드에 대한 동기화 처리 - 동기화 메소드
       형식) 접근지정자 synchronized 반환형 메소드명(파라메터,..) {
                  인스턴스 필드값 변경 명령;
                  ...
             }
    
    2) 인스턴스 필드값 변경 메소드 호출하는 명령에 대한 동기화 처리
       >> 동기화 메소드로 변경하지 못할 경우 사용 
       형식) synchronized(인스턴스) {
                 인스턴스 필드값 변경 메소드 호출 명령;
                 ... 
             }