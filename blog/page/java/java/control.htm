분기문
  - 프로그램의 흐름(스레드:Thread)을 제어하는 명령 >> 선택문, 반복문 
  
  1. 선택문  
    1) if - 조건에 의해 명령을 선택 실행
      형식1) if(조건식) { //만약에 조건이 참이면
                 명령;    //명령을 실행
                 .... 
	     }	             

        ※ 명령이 하나인 경우 { } 생략 가능 
        - if(조건식) 명령;
    
      형식2) if(조건식) { //만약에 조건이 참이면
                  명령;   //명령을 실행
                  ....
             } else {     //아니라면
                  명령;   //명령을 실행
                  ....
             }
    
      형식3) if(조건식) { //만약에 조건이 참이면
                  명령;   //명령을 실행
                  ....
             } else if(조건식) { //아니라면 만약에 조건이 참이면
                  명령;   //명령을 실행
                  ....
             } else if(조건식) {
                  ....
             } else { //생략 가능
                //모든 조건이 맞지 않는 경우 실행   
             }
             
       형식4) if(조건식) {
                  명령;
                  ... 
                  if(조건식) {
                      명령;
                      ...
                  }
                  명령;  
              }      

     ※ eclipse에서 명령 정렬 >> Ctrl + Shift + F 
    
    2) switch - switch의 값을 case의 값과 비교하여 같은 경우 실행
      형식) switch(변수 또는 연산식) { //변수값 또는 결과값
               case 값1:
                      명령;
                      ...
                      break;//생략 가능
               case 값2:
                      명령;
                      ...
                      break;
	       case 값3:
                      명령;
                      ...
                      break;
                ...       
	       default://생략 가능
                      명령;
                      ...                                   
            }
        
      - switch의 변수값 또는 결과값을 case의 값과 비교하여 같은 값을
        가지고 있는 위치부터 하단에 존재하는 모든 명령들을 실행

      - switch 명령의 비교값은 실수 사용 불가
          
      - case 명령에는 상수만 선언하며 중복 선언 불가
        
      - case의 값이 맞는 경우 하단에 존재하는 모든 명령들을 수행하지만 
        break 명령을 만나면 switch문 종료
    
      - case 값이 하나도 일치하지 않으면 default 위치의 명령 실행
  
      ※ JDK1.7 이상에서는 비교대상에 문자열 허용

   2. 반복문 => 조건식에 의해 명령을 반복 실행 
    
    1) for : 반복의 횟수가 정해져 있는 경우
      형식) for(초기식;조건식;증감식) {
                반복실행될 명령;
                .... 
            } 
    
      - 초기식 > 조건식(T) > 명령 > 증감식 > 조건식(T) > 명령 > 증감식 > 조건식(T) > 명령 > ....
      - for() 안에는 반드시 ;를 두개 사용
      - 초기식, 증감식, 조건식은 생략 가능
      - 조건식이 생략되면 무조건 참으로 인식(무한루프)
      - 초기식 및 증감식은 ,를 이용하여 여러개 선언 가능

    ※ 프로그램 흐름 파악 => Debug 기능 사용
       breakpoint 설정 => F11 => Debug 모드로 변환 => F6를 눌러 프로그램의 흐름 파악
       Debug 모드에서 프로그램 흐름 종료 => Java 개발모드로 변환 => breakpoint 제거 

    2) while => 반복횟수가 정해져 있지 않은 경우 사용
      형식) while(조건식) {
                명령;
                ....
            }
        
      - 조건식이 생략되면 에러가 발생      
    
    3) do~while
      형식) do {
                명령;
                ....
            } while(조건식);
        
      - 조건식이 아래에 존재하므로 무조건 한번은 명령 실행
    
   3. 기타제어문
     1) break
      - switch 또는 반복문을 종료하기 위해 사용하는 명령
       형식) if(조건식) break;  또는  if(조건식) break 라벨명;  

       ※ 반복문에 라벨명(LabelName)을 설정하여 반복문 종료
    
     2) continue
      - 반복문에서 사용되며 하단에 있는 명령을 생략하여 다시 반복문을 실행하기 위한 명령
       형식) if(조건식) continue;  또는  if(조건식) continue 라벨명;