## hello world
  # HelloWorld.java
<code>
public class HelloWorld {
  public static void main(args[] String) {
    System.out.println("hello world");
  }
}
</code>

● JDK 설치
  1. JDK 다운로드 - 웹브라우저 - http://www.oracle.com
       >> JDK : jdk-8u201-windows-x64.exe     
  2. JDK 설치 >> JRE도 설치
  3. 환경변수 생성 또는 변경
    >> 시스템 변수 - 새로만들기(JAVA_HOME : JDK 프로그램이 설치된 경로)
           변수이름 : JAVA_HOME
		변수값 : C:\Program Files\Java\jdk1.8.0_201
  >> 시스템 변수 - Path 환경변수값 변경(명령 디렉토리 추가)  
       변수값 : %JAVA_HOME%\bin;기존내용 
                ----------------
                    └ 추가

  4. JDK 실행 확인(Console 실행 : cmd)  
    c:\> javac -version 
    javac 1.8.0_201

● 기본문법 및 Java Programming
  1. Java Source는  class 단위로 만들어 준다.
  형식) public class 클래스명 {
  		 
        }
        
  2. Java Source 파일명은 클래스명과 동일하게 지정하며 확장자는 반드시 java로 한다.
  3. Desktop Application에서는 반드시 main 메소드가 1개 있어야 된다.
     - 프로그램의 시작점을 의미(JVM이 가장 먼저 호출하는 메소드)
     ※ 메소드(클래스 안에 존재) : 기능 - 명령들의 집합        
     형식) public static void main(String[] args) {
                명령; 
                명령;
                ....  
           }  

     - 명령 뒤에는 반드시 ;를 붙인다.
     - 메소드 안의 명령은 순차적으로 실행

     ※ 출력메소드 : 화면에 원하는 값을 출력하는 메소드
        형식) System.out.print("출력될 내용");
              System.out.println("출력될 내용");
     
  4. Java Source는 컴파일을 하여 Byte Code로 변환
     - Class 파일(Binary 파일) 생성  
    형식) javac 소스파일명
    
  5. Class를  JVM를 이용하여 실행
     형식) java 클래스명  
            
● 주석문
  1. Source 주석 : 프로그램 소스에 설명을 제공하는 주석
     - 유지보수를 보다 쉽게하기 위해 제공
     - 디버깅을 목적으로 사용
     
     형식)  //설명문          >> 행주석(Ctrl + /)
            /*  설명문  */    >> 범위주석(여러 행을 주석 : Ctrl+Shift+/  해제 : Ctrl+Shift+\) 
  
  2. API 주석 : API 문서에 설명을 제공하는 주석
     - 클래스를 배포할 경우 클래스의 사용법을 제공
     
     형식) /**  설명문  */   >> 클래스, 메소드등 위에 사용